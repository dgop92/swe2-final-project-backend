version: "3.1"

networks:
  main_network:
    name: main_network

volumes:
  mongo-data:

services:
  create_service:
    container_name: k_create_service_container
    build:
      context: ./people_service
    restart: "no"
    env_file:
      - ./container_files/env-vars/.people-service.env
    networks:
      - main_network
    command:
      - sh
      - run-prod.sh
      - create
    depends_on:
      - mongodb

  read_service:
    container_name: k_read_service_container
    build:
      context: ./people_service
    restart: "no"
    env_file:
      - ./container_files/env-vars/.people-service.env
    networks:
      - main_network
    command:
      - sh
      - run-prod.sh
      - read
    depends_on:
      - mongodb

  mongodb:
    container_name: k_mongodb_container
    image: mongo
    ports:
      - "27017:27017"
    env_file:
      - ./container_files/env-vars/.mongo.env
    volumes:
      - mongo-data:/data/db
    networks:
      - main_network
    command: --quiet

  kong_dbless:
    image: kong:3.4.0
    container_name: kong_dbless_container
    hostname: kong_dbless
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_DNS_ORDER: LAST,A,CNAME
    volumes:
      - "./kong-gateway:/kong/declarative/"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"
    networks:
      - main_network
    depends_on:
      - create_service
      - read_service
